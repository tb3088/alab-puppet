---
lookup_options:
  '^gsajboss6::(user|group|dirs)$':
    merge: 'hash'
  '^gsajboss6::install::(.*)$':
    merge: 'hash'

#FIXME

# 1. 'sw' is gratuitous
# 2. adopt JBOSS_HOME=/opt/jboss/[jboss-]eap-x.y (shared).
# instances should have:
# CONFIG in [/usr/local]/etc/jboss/<instance> and
# WAR in /var/lib/jboss/<instance> and
# LOGS in /var/log/jboss/<instance>
#
# arguably _BASE = /var/lib/jboss/<instance> 
# 3. JAVA_HOME if 3rd party should be /opt/java/<version>

# TODO
# use stdlib::file_line resource to rewrite GSA's rc_scripts/config_jboss_example.sh with less stupid.
# actually just rewrite them all so they pick up on naming: <config|start|stop|restart>_[jboss_]<instance>.sh

#lookup_options:
#  key:
#    merge: see https://puppet.com/docs/puppet/5.4/hiera_merging.html#merge-behaviors

# NOTICE!!
# While 'lookup()' can return a Hash/Array natively, the right-hand-side of YAML items has to be a String-like
# object so 'storing' it in YAML for purposes of 'Automatic Parameter Lookup (APL)' force-converts it to String which
# will then violate Class parameter datatypes if not also set to receive a String. You have to instead put 'lookup()' 
# in the Class parameter section explicitly. Otherwise the Hash/Array has to spelled out in proper YAML format.
#
# CAN NOT DO THIS!!
#gsajboss6::user:    "%{lookup('os::users.jboss', Hash)}"
#gsajboss6::group:   %{lookup('os::groups.jboss')}

gsajboss6::group:
  name: 'jboss'
  gid:  201

gsajboss6::user:
  name: 'jboss'
  uid:  201
  gid:  "%{lookup('gsajboss6::group.gid')}"
  home: '/home/jboss'

# FIXME lookup '/opt' from os::dirs.opt
gsajboss6::dirs:
  root:
    path: &root_dir
      '/opt/sw/jboss'
  home:
    # analogous to CATALINA_HOME for common binary distribution
    path: "/opt/sw/jboss/jboss-eap-%{lookup('gsajboss6::install::version')}"
  # alternately and then detect array and glue
  # - *root_dir
  # - "jboss-eap-%{lookup('gsajboss6::install::version')}"
  base:
    #FIXME should be /var/lib/jboss/<instance> but GSA's scripts will blow up
    # actually 'conf' like TOMCAT uses?
    path: '/opt/sw/jboss/gsaconfig'
  log:
    #FIXME this path is just wrong
    path: '/logs/jboss'

gsajboss6::install::version: 6.4
gsajboss6::install::package:
    "gsainstall-%{lookup('gsajboss6::install::version')}-2.%{facts.os.architecture}.rpm"

gsajboss6::install::file:
    "jboss-eap-%{lookup('gsajboss6::install::version')}_update5.zip"


gsajboss6::java::version: 8u131
gsajboss6::java::package:
    "jre-%{lookup('gsajboss6::java::version')}-linux-x64.rpm"
  #source: "%{facts.os.dirst.temp"
  # Facters capitalized and need match for 'x64' and 'linux'


# interesting idea; https://github.com/grasmash/yaml-expander
# https://stackoverflow.com/questions/2063616/how-to-reference-a-yaml-setting-from-elsewhere-in-the-same-yaml-file
#jboss_dir: ${gsajboss6.base_dir}/jboss also
#
#TODO update manifests to call isInstance?(Array) then join(..., $facts['separator']) on array
  # - *root_dir
  # - "jboss-%{lookup('gsajboss6::jboss_version')}"

#gsajboss6::java_dir: "%{lookup('gsajboss6::base_dir')}/java/%{lookup('gsajboss6::java_version')}"
